Get-ExecutionPolicy 
Set-ExecutionPolicy RemoteSigned

Import-Module ActiveDirectory

#Check for non-expiring passwords
$Users = Get-ADUser -Filter 'PasswordNeverExpires -eq $TRUE' -Properties PasswordNeverExpires

#Reading user objects
$Users = Get-ADUser -filter {Enabled -eq $True -and PasswordNeverExpires -eq $False} -Properties msDS-UserPasswordExpiryTimeComputed, PasswordLastSet, CannotChangePassword

#Displaying the password expiry date 
$Users | select Name, @{Name="ExpiryDate";Expression={[datetime]::FromFileTime($_."msDS-UserPasswordExpiryTimeComputed")}}, PasswordLastSet

#Finding inactive accounts
$maxPWAge = (Get-ADDefaultDomainPasswordPolicy).MaxPasswordAge.Days

foreach($u in $Users){
     if( [datetime]::FromFileTime($u.'msDS-UserPasswordExpiryTimeComputed').addDays($maxPWAge) -lt (Get-Date)) {
         $u. DistinguishedName; $u.PasswordLastSet -replace "`n|`r","" 
     }
 }


#Users who cannot change their password
foreach($u in $Users){
     if($u.CannotChangePassword -eq $true -and [datetime]::FromFileTime($u."msDS-UserPasswordExpiryTimeComputed") -lt (Get-Date)) {
         $u. DistinguishedName
     }
 }

#export User with password and expiry details to CSV
Get-ADUser -Filter * -Properties DistinguishedName,SamAccountName,Name,GivenName,Surname,UserPrincipalName,Enabled,PasswordNeverExpires,PasswordExpired,PasswordLastSet,pwdLastSet,PasswordNotRequired,CannotChangePassword,badPasswordTime,badPwdCount,BadLogonCount,LockedOut,LastLogonDate,LastBadPasswordAttempt -SearchBase "OU=SBSUsers,OU=Users,OU=MyBusiness,DC=chittering,DC=local" | select DistinguishedName,SamAccountName,Name,GivenName,Surname,UserPrincipalName,Enabled,PasswordNeverExpires,PasswordExpired,PasswordLastSet,pwdLastSet,PasswordNotRequired,CannotChangePassword,badPasswordTime,badPwdCount,BadLogonCount,LockedOut,LastLogonDate,LastBadPasswordAttempt | Export-CSV "c:\temp\users.csv"

#set passwords to never expire.
Set-ADUser -Identity casual -PasswordNeverExpires $true

#set passwords to expire.
Set-ADUser -Identity casual -PasswordNeverExpires $false

#expire password immediately, force password change on next login
$todouser = Get-ADUser casual -Properties pwdLastSet
$todouser.pwdLastSet = 0
Set-ADUser -Instance $todouser

#set password reset date from today, force password change based on password expiration policy
$todouser = Get-ADUser casual -Properties pwdLastSet
$todouser.pwdLastSet = -1
Set-ADUser -Instance $todouser

#import users to set passwords to expire.
Import-Module ActiveDirectory
Import-Csv "C:\temp\ADUsers.csv" | ForEach-Object {
 $samAccountName = $_."samAccountName"
 Get-ADUser -Identity $samAccountName | Set-ADUser -PasswordNeverExpires:$False
 $todouser = Get-ADUser $samAccountName -Properties pwdLastSet
 $todouser.pwdLastSet = 0
 Set-ADUser -Instance $todouser 
}
